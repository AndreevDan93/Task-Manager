plugins {
	id 'java'
	id 'application'
	id 'checkstyle'
	id 'jacoco'

	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	id 'com.adarshr.test-logger' version '3.0.0'
	id 'org.liquibase.gradle' version '2.0.4'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

application {
	mainClass = 'hexlet.code.AppApplication'
}

compileJava {
	options.release = 17
	options.encoding = 'UTF-8'
}

wrapper {
	gradleVersion = '7.3'
	distributionType = Wrapper.DistributionType.ALL
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2:1.4.200'

	// Подключаем зависимости, необходимые для работы плагина
	liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime sourceSets.main.output
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

tasks.named('test') {
	useJUnitPlatform()
    finalizedBy jacocoTestReport
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

// Настраиваем таску diffChangeLog таким образом,
// чтобы миграция генерировалась при каждом изменении в модели
diffChangeLog {
	dependsOn compileJava
}

// Настраиваем Liquibase
liquibase {
	activities {
		main {
			// Указываем путь, по которому будет сгенерирован файл миграции
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			// Указывем источник, с которым будут сравниваться изменения
			// Это база данных, изначально она пустая
			url 'jdbc:h2:./taskManager'
			// Имя пользователя и пароль для подключения к базе
			username 'sa'
			password 'admin'
			// Сравниваем с моделями, задавая пакет
			referenceUrl 'hibernate:spring:hexlet.code.model.' +
					// Указываем диалект
					'?dialect=org.hibernate.dialect.H2Dialect' +
					// Указываем правила именования таблиц и столбцов,
					// чтобы они соответствовали правилам Spring
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}
